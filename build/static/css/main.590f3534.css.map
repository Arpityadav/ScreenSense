{"version":3,"file":"static/css/main.590f3534.css","mappings":"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","sources":["index.css","App.css","RecommendationForm.css"],"sourcesContent":["@import 'tailwindcss/base';\n@import 'tailwindcss/components';\n@import 'tailwindcss/utilities';\n",".App {\n  text-align: center;\n}\n\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n","body {\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n    background-image: url('https://images.pexels.com/photos/694740/pexels-photo-694740.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1');\n    background-size: cover;\n    background-position: center;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    filter: contrast(90%);\n  }\n  \n  .recommendation-form {\n    max-width: 400px;\n    min-width: 300px;\n    filter: contrast(120%);\n    padding: 20px;\n    background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent white background */\n    border-radius: 8px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Shadow effect */\n  }\n  \n  .recommendation-form label {\n    font-weight: bold; /* Make questions bold */\n    margin-bottom: 10px;\n    display: block;\n  }\n  \n  .recommendation-form select,\n  .recommendation-form input[type=\"text\"] {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 20px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n\n  .listing {\n    @apply text-xl text-white;\n  }\n  .listing ol li, .listing p {\n    filter: contrast(150%);\n    filter: opacity(98%);\n    @apply text-white rounded bg-black p-4 text-xl shadow-md;\n  }\n\n\n\n  /* try {\n    const prompt = `Suggest me a list of 5 ${type} and my favorite ones are ${favorite} If i prefer the genre ${genre}. I am in a ${mood} mood`;\n    const response = await invokeModel({\n      modelId: 'amazon.titan-text-lite-v1',\n      contentType: 'application/json',\n      accept: 'application/json',\n      body: JSON.stringify({\n        inputText: prompt,\n        textGenerationConfig: {\n          maxTokenCount: 300,\n          stopSequences: [],\n          temperature: 0,\n          topP: 0.9,\n        },\n      }),\n    });\n\n    const responseBody = new TextDecoder().decode(response.body);\n    const data = JSON.parse(responseBody);\n    setListing(data.results[0].outputText); // Set the listing in state\n\n  } catch (error) {\n    console.error('Error:', error);\n  } */"],"names":[],"sourceRoot":""}